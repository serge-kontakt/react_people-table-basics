{"version":3,"sources":["App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinksClass","isActive","classNames","App","className","role","to","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","sex","person","slug","name","PeopleTable","people","selectedPerson","useParams","peopleWithParents","map","motherName","fatherName","mother","find","woman","father","man","born","died","PeoplePage","useState","setPeople","isError","setIsError","isNoPeople","setIsNoPeople","isLoading","setIsLoading","useEffect","peopleAll","length","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e0a44782.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst getLinksClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item ', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinksClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinksClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const getLinkClass = (sex: string) => {\n    return classNames('', {\n      'has-text-danger': sex === 'f',\n    });\n  };\n\n  return (\n    <NavLink\n      to={`../${person?.slug}`}\n      className={getLinkClass(person.sex)}\n    >\n      {person?.name}\n    </NavLink>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport '../../App.scss';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const selectedPerson = slug;\n\n  const peopleWithParents = people.map(person => {\n    if (person.motherName && person.fatherName) {\n      const mother = people.find(woman => woman.name === person.motherName);\n      const father = people.find(man => man.name === person.fatherName);\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    }\n\n    if (person.motherName) {\n      const mother = people.find(woman => woman.name === person.motherName);\n\n      return {\n        ...person,\n        mother,\n      };\n    }\n\n    if (person.fatherName) {\n      const father = people.find(man => man.name === person.fatherName);\n\n      return {\n        ...person,\n        father,\n      };\n    }\n\n    return person;\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map((person: Person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.name}\n            className={classNames({\n              'has-background-warning': selectedPerson === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n              />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {!person.motherName && '-'}\n              {person.motherName\n                && (\n                  person.mother\n                    ? (\n                      <PersonLink\n                        person={person.mother}\n                      />\n                    )\n                    : person.motherName\n                )}\n            </td>\n            <td>\n              {!person.fatherName && '-'}\n              {person.fatherName\n                && (\n                  person.father\n                    ? (\n                      <PersonLink\n                        person={person.father}\n                      />\n                    )\n                    : person.fatherName\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n\n    </table>\n\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isNoPeople, setIsNoPeople] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleAll: Person[]) => {\n        setPeople(peopleAll);\n\n        if (peopleAll.length === 0) {\n          setIsNoPeople(true);\n        }\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !isNoPeople && !isError\n          && <PeopleTable people={people} />}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}